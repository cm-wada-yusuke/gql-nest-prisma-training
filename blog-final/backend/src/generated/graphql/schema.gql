# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface Connection {
  nodes: [Node!]!
  pageInfo: PageInfoModel!
}

input CreateImpressionInput {
  comment: String
  postId: String!
  sticker: String!
  twitterId: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ImpressionModel {
  comment: String
  createdAt: DateTime
  id: ID!
  postId: String!
  sticker: String!
  twitterId: String
}

type Mutation {
  addImpression(input: CreateImpressionInput!): ImpressionModel!
  upsertPostsFromStorage(force: Boolean): String!
}

interface Node {
  id: ID!
}

type PageInfoModel {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type PostModel implements Node {
  bodyMarkdown: String!
  contentPath: String!
  emoji: String
  excerpt: String
  id: ID!
  impressions: [ImpressionModel!]!
  publishDate: DateTime
  published: Boolean
  thumbNailUrl: String
  title: String!
  type: String!
}

type PostsConnection implements Connection {
  nodes: [PostModel!]!
  pageInfo: PageInfoModel!
}

type ProfileModel {
  github: String!
  handleName: String!
  position: String!
  summary: String
  twitter: String!
}

type Query {
  findPost(contentPath: String, id: String): PostModel!
  fixedPosts: [PostModel!]
  impressions(first: Int, postId: String, sortAs: String = "desc"): [ImpressionModel!]
  posts(type: [String!]): [PostModel!]
  postsConnection(cursor: String, first: Int, last: Int, type: [String!]): PostsConnection
  prismaPosts: [PostModel!]
  profile: ProfileModel
}

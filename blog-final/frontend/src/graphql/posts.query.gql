fragment Post on PostModel {
    id
    title
    type
    publishDate
    emoji
    contentPath
}

fragment Profile on ProfileModel {
    handleName
    position
    summary
    twitter
    github
}

fragment Impression on ImpressionModel {
  id
  comment
  createdAt
  sticker
  twitterId
  postId
}


query PostIndexPage {
  articles: posts(type: ["article"]) {
    ...Post
  }
  diaries: posts(type: ["diary"]) {
    ...Post
  }
  profile {
    ...Profile
  }
}

query PostDetailPage($contentPath: String) {
  post: findPost(contentPath: $contentPath) {
    ...Post
    bodyMarkdown
    impressions {
      ...Impression
    }
  }
}

query ImpressionContainer($postId: String!) {
  impressions(postId: $postId, sortAs: "asc") {
    ...Impression
  }
}

mutation Impression($input: CreateImpressionInput!) {
  addImpression(input: $input) {
    ...Impression
  }
}